
Если в вашем случае 123 передаётся в SQL-запрос без дополнительной валидации, то возможна SQL-инъекция через передачу больших чисел. Рассмотрим возможные пути эксплуатации.

1. Переполнение типа
SQLite хранит целые числа в формате 8-байтовых signed integer (INTEGER), то есть диапазон значений:

−
2
63
 до 
2
63
−
1
−2 
63
  до 2 
63
 −1
Если передать число больше этого диапазона, может возникнуть переполнение, что может привести к неожиданному поведению.

Эксплуатация:

Если обработчик использует int() в Python, то при передаче числа 9223372036854775808 оно может превратиться в строку, что уже намекает на возможную SQL-инъекцию.

В случае других языков может произойти преобразование типов, что иногда даёт обход фильтров.

2. Обход фильтров через строковый ввод
В SQLite нет строгой типизации. Если запрос строится так:

SELECT * FROM users WHERE id = $id;
а $id передаётся без кавычек и без проверки типа, можно попробовать передать число в виде строки:

http://10.255.1.1/id/"123"
или с SQL-кодом:

http://10.255.1.1/id/123' OR 1=1 --
или

http://10.255.1.1/id/123 UNION SELECT sqlite_version() --
3. Анализ ошибки
Если при передаче большого числа ошибка похожа на:

SQLite error: integer overflow
то стоит посмотреть, где именно происходит сбой. В некоторых случаях можно управлять порядком выполнения запроса.

Попробуйте:

http://10.255.1.1/id/999999999999999999999999999999
и проверьте, как сервер реагирует.

4. Эксплуатация с UNION SELECT
Если id напрямую подставляется в запрос:

SELECT * FROM users WHERE id = 123;
можно попытаться выполнить UNION SELECT:

http://10.255.1.1/id/-1 UNION SELECT 1,sqlite_version(),3,4 --
Но это сработает только если сервер возвращает результаты в HTTP-ответе.

5. Boolean-based SQLi
Попробуйте передавать разные условия:

http://10.255.1.1/id/123 AND 1=1 -- (должен вернуть данные)
http://10.255.1.1/id/123 AND 1=0 -- (не должен вернуть данные)
Если есть различие в ответах — SQL-инъекция возможна.

Как защититься?
Используйте подготовленные запросы (Prepared Statements).

Принудительно приводите id к числу перед запросом (int(id)).

Ограничивайте диапазон допустимых значений (BETWEEN 1 AND 1000000).

Логируйте ошибки и неожиданные запросы.

Если у вас есть логи запросов или ошибки, можете скинуть — посмотрим, есть ли способ эксплуатации.
