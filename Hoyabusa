https://github.com/Yamato-Security/hayabusa?tab=readme-ov-file
ChatG
Hayabusa — это инструмент для быстрого создания временных линий судебной экспертизы и поиска угроз в журналах событий Windows, разработанный группой Yamato Security в Японии. Название "Hayabusa" переводится с японского как "сапсан", что символизирует скорость и эффективность инструмента в охоте за угрозами. Он написан на безопасном с точки зрения памяти языке Rust, поддерживает многопоточность для максимальной производительности и является единственным инструментом с открытым исходным кодом, полностью поддерживающим спецификацию Sigma, включая правила корреляции версии 2. 
GitHub
+1
GitHub
+1

Для установки Hayabusa на Windows выполните следующие шаги:

Загрузка исполняемого файла: Перейдите на страницу релизов Hayabusa на GitHub и загрузите последнюю версию исполняемого файла для Windows.

Распаковка архива: После загрузки распакуйте архив в удобное для вас место на вашем компьютере.

Подготовка к запуску: Перед первым запуском рекомендуется ознакомиться с разделом "Running Hayabusa" в Wiki проекта, чтобы понять основные параметры и настройки. 
GitHub

Запуск Hayabusa: Откройте командную строку (CMD) или PowerShell, перейдите в каталог с распакованным исполняемым файлом и выполните команду, например:

hayabusa.exe csv-timeline -f путь_к_вашему_журналу.evtx
Эта команда создаст временную линию событий из указанного файла журнала.

Примечания:

Антивирусное ПО: При запуске Hayabusa некоторые антивирусные или EDR-программы могут выдавать предупреждения из-за наличия в правилах детекции таких ключевых слов, как "mimikatz" или подозрительных PowerShell-команд. Эти срабатывания являются ложными, поэтому может потребоваться добавить Hayabusa в список исключений вашего антивирусного ПО. 
GitHub

Пути с пробелами: Если путь к файлу или каталогу содержит пробелы, заключите его в двойные кавычки и убедитесь, что в конце пути нет обратной косой черты. Например:

hayabusa.exe csv-timeline -f "C:\Папка с пробелами\журнал.evtx"
Более подробную информацию о параметрах командной строки и примерах использования можно найти в разделе "Usage Examples" на Wiki проекта. 
GitHub


Favicon
Источники
В Zabbix отсутствует элемент данных с ключом vfs.ns.util. Возможно, вы имели в виду vfs.fs.size, который используется для мониторинга дискового пространства. Этот элемент данных применяется в различных шаблонах, включая стандартные шаблоны для мониторинга файловых систем. Например, в версии Zabbix 6.4 для обнаружения файловых систем используется элемент данных vfs.fs.get вместо ранее применявшегося vfs.fs.discovery. 
support.zabbix.com
+3
mihanik.net
+3
zabbix.com
+3
zabbix.com

Если вы ищете конкретный шаблон, содержащий элемент данных для мониторинга использования файловых систем, рекомендуется ознакомиться с готовыми шаблонами, предоставляемыми Zabbix. 


Favicon
Источники
Вы сказали:
Ну так ты и скажи, в каком шаблоне я могу найти этот параметр 
ChatGPT сказал:
В Zabbix параметр vfs.fs.size используется для мониторинга дискового пространства на хостах. Этот параметр часто применяется в стандартных шаблонах, предназначенных для мониторинга операционных систем.

Шаблоны, содержащие параметр vfs.fs.size:

Template OS Linux: Предназначен для мониторинга Linux-систем и включает элементы данных для отслеживания состояния файловых систем с использованием vfs.fs.size.

Template OS Windows: Предназначен для мониторинга Windows-систем и также содержит элементы данных с ключом vfs.fs.size для мониторинга дискового пространства.

Эти шаблоны используют низкоуровневое обнаружение (LLD) для автоматического определения и мониторинга всех доступных файловых систем на хосте. Если вам необходимо настроить мониторинг конкретного раздела или задать индивидуальные пороги срабатывания триггеров, вы можете:
zabbix.com
+1
zabbix.com
+1
